public class lesson7 {
    /**
     * Шифрование
     * Проблема шифрования:
     * 1) можно прочитать
     * 2) можно изменить
     * 3) можно сдеалть вместо нас
     * Решения:
     * 1) шифрование
     * 2) хэш-функции
     * 3) аутентификация, логин пароль, сертификаты
     *
     * Алгоритм Diffie-Hefman - выработки симетричного ключа (симетричное шифрование - один ключ для всех)
     * Алгоритм RSA (асиметричное шифрование - несколько ключей), открытый проект open ssr
     *
     * MINM - man in the middle - встревает в канал связи человек, подменяя других (левый сайт например)
     * Решает проблему: центр сертификации
     * В центр сертификации пихается открытый ключ организации и центр дает сертификат .crt
     *
     * https - защищено:
     * - crt
     * - RSA
     * просто http - нет сертификата, не защищено
     *
     * Команды для ipsek-шифрования:
     * - crypto isakmp policy 1 (имена полиси должно быть разная
     *  на разных роутерах, а политика шифрования одинаковая)
     *  - authint pre-share
     *  - encryption aes
     *  ex
     *  - crypto isakmp key QWEERTY1 address (публичный адрес встречного роутера)
     *
     * esp пакетики - пакетики с зашифрованными данными
     * Параметры для шифрования трафика:
     * - crypto ispec transform-set "имя:" AES128-SHA esp-aes esp-sha-hmac
     *
     * - crypto map MAP1 10 ipsec-isakmp
     * (для задания со звездочкой внимательно посмотреть мап - сикввенс)
     *
     * - description Encryption_to_R6_stelmakh_10/07
     * - set peer 6.6.6.6 (внешний айпи роутера вхожденного в ту сеть с которой коннектимся)
     * - set transform-set AES128-SHA
     *
     * - ip access-list extended NET_10_to_10
     * туда:
     * - permit ip srs_ip wild card dst_ip wild card
     * обратно:
     * - permit ip dst_ip wild card src_ip wild card
     *
     * - crypto map MAP1 10 ispec-isa (дальше пропустила, надо дополнять)
     *
     *
     *
     *
     *
     *
     *
     */
}
