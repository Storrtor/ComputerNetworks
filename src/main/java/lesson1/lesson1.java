package lesson1;

public class lesson1 {
    /**
     * Дз скриншотами
     * Сдача дз в комментарии на сайте прикрепляется, ссылку из гугл диск вставить (открыть доступ)
     *
     * Виды связи:
     * - Simplex - односторонняя связь (один вещатель, он вещает на кучу получателей)
     * Например теле-радио вещание. Его задача вещать, он может не знать, что его слушают.
     * - Half-duplex - один вещает, второй принимает и наоборот. Например, рация
     * - Full-duplex - двусторорняя передача (и вещает и получает) (используется в основном эта!).
     * Например, разговор по телефону
     *
     * Методы адресации данных:     Метаданные - от кого - кому
     * - Unicast - передача данных только одному (известно от кого - кому идет вещаение).
     * !!! Большая часть трафика в интернете такая unicast !!!
     * - Broadcast - передача данных всем (как правило вспомогательная для того, чтобы заработала unicast)
     * - Multicast - передача данных группе устройств. (broadcast для ограниченного числа юзеров, например подписки на что-то)
     *
     * Виды коммуницакии:
     * - Коммутация каналов. Только один абонент общается с другим, для остальных заблокировано. Например старая телефонная связь
     * - Коммутация пакетов. Данные передаются очень быстро пакетами, что мы не замечаем потерь.
     * От разных аббонентов одновременно одному пользователю может все приходить.     *
     *
     * Классаицикая сетей по территориальному признаку:
     * - LAN - local area network - локалка - единая сеть,
     * которую строят сисадмины одной корпорации и поддерживают
     * (локалка - все что наше)
     * - WAN - wide area network - провайдер для нас (в провайдере сеть LAN)
     * (ван все что нам предоставляют, все что не наше)
     *
     * Топологии (карты сетей) - абстракция, подходит для всего:
     * - Full-mesh - Полносвязанная топология (самая дорогая) - каждый связан с каждым
     * (у каждого отдельный канал связи до каждого). Очень надежно, есть резервные пути, но очень дорого и сложно маштабируемо
     *  - Mesh-сети - Ячеистая топология
     *  - Кольцевая топология
     *  - Топология "Звезда" - главное чтоб не вышел из строя центральный узел
     *  - Топология общая шина - ломается хоть одно - идет обрубание сети на 2 например (Wifi - шина - воздух) Редко используемая
     *  - Иеарирхическая звезда (Дерево) или Смешенная технология - в корпорациях используется на основе вышеописанных остальных
     * Чаще всего работают в корпорациях со смешаннох технологией !!!
     *
     * Теоретическая модель OSI (open system) - модель взаимодействия открытых систем:
     * Стек TCP/IP:
     * 0 уровень - физический (воздух/оптика(фотоны)/электоны)
     * 1 уровень - канальный (описываем куда летит, протоколы == стандарты)
     * 2 уровень - сетевой (протокол IP - какие-то сети, соединенные между собой как куски данных)
     * 3 уровень - транспортный (порты - TCP/UDP, у каждого приложения свой адрес (порт))
     * 4 уровень - прикладной: SIP, Представления (View), HTTP
     *
     * Сетевая технология Ethernet с физической точки зрения:
     * - hub
     * - switch
     *
     */
}
